import json
from random import randint

from telebot import types
from telebot.async_telebot import AsyncTeleBot

import base
import keyboards
from config import *
from meditation import meditation_stack

bot = AsyncTeleBot(TOKEN)

log = logging.getLogger(__name__)


async def menu_edit(call: types.CallbackQuery):
    await bot.edit_message_reply_markup(call.message.chat.id,
                                        call.message.id,
                                        reply_markup=keyboards.start_keyboard())


async def menu_delete(call: types.CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.id)
    await bot.send_photo(call.message.chat.id,
                         'AgACAgEAAxkBAAIERme0NbdwmwEFyJJzTQABZB9ZJuLdHAACa64xG8wgoEUzA7ZU057smAEAAwIAA3kAAzYE',
                         '''–ú–µ–Ω—è –∑–æ–≤—É—Ç *–ê–Ω–∞—Å—Ç–∞—Å–∏—è –ì—É–Ω–∏–Ω–∞* ‚Äì –º–∞–≥–∏—Å—Ç—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –∞–≤—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ _¬´–í–∫–ª—é—á–∏ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å¬ª_, —Å–æ–∑–¥–∞—Ç–µ–ª—å *–ñ–µ–Ω—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã*, –≥—Ä—É–ø–ø–æ–≤—ã—Ö –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤ –∏ –º–∞—Å—Ç–µ—Ä–º–∞–π–Ω–¥–æ–≤, –∞ —Ç–∞–∫–∂–µ –∞–≤—Ç–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–∞ *GUNA –ò–ó–û–ë–ò–õ–ò–Ø*.

*–ú–æ—è –º–∏—Å—Å–∏—è ‚Äì –ø–æ–º–æ—á—å –≤–∞–º:*
‚ñ´Ô∏è–û—Ç–∫—Ä—ã—Ç—å –≤–∞—à *—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å* –∫ –∏–∑–æ–±–∏–ª–∏—é –∏ –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—é –≤–æ –≤—Å–µ—Ö —Å—Ñ–µ—Ä–∞—Ö –∂–∏–∑–Ω–∏.
‚ñ´Ô∏è–ù–∞—É—á–∏—Ç—å—Å—è —Å—Ç—Ä–æ–∏—Ç—å *–≥–ª—É–±–æ–∫–∏–µ –∏ –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è* —Å —Å–æ–±–æ–π –∏ –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏, –æ–±—Ä–µ—Å—Ç–∏ –∏—Å—Ç–∏–Ω–Ω—É—é –ª—é–±–æ–≤–Ω—É—é –±–ª–∏–∑–æ—Å—Ç—å —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º. 
‚ñ´Ô∏è–û–≤–ª–∞–¥–µ—Ç—å –∏—Å–∫—É—Å—Å—Ç–≤–æ–º *—Å–æ–∑–¥–∞–Ω–∏—è –∏ –ø—Ä–∏—É–º–Ω–æ–∂–µ–Ω–∏—è –±–ª–∞–≥–æ—Å–æ—Å—Ç–æ—è–Ω–∏—è*, –∫–æ—Ç–æ—Ä–æ–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –≤—Å—é –≤–∞—à—É —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å.

*–° –ß–ï–ì–û –ù–ê–ß–ê–¢–¨?*
–ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –º–æ–∏–º–∏ –º–µ–¥–∏—Ç–∞—Ü–∏—è–º–∏ –≤ —ç—Ç–æ–º –±–æ—Ç–µ ‚Äì –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∏–±–æ–ª–µ–µ –æ—Ç–∫–ª–∏–∫–∞—é—Ç—Å—è –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –∏ —Å—Ç–∞–Ω—É—Ç –ø–µ—Ä–≤—ã–º —à–∞–≥–æ–º –∫ –∫—Ä–∞—Å–∏–≤–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏‚ú®

*–ï—Å–ª–∏ –≤—ã –≥–æ—Ç–æ–≤—ã –∫ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—é –±–û–ª—å—à–µ–≥–æ –≤ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏ - —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±–∏–ª—å–Ω–æ–µ –±—ã—Ç–∏–µ –Ω–∞ —ç–∫—Å—Ç—Ä–∞–æ—Ä–¥–∏–Ω–∞—Ä–Ω–æ–º —É—Ä–æ–≤–Ω–µ, —è –ø—Ä–∏–≥–ª–∞—à–∞—é –≤–∞—Å –≤–æ–π—Ç–∏ –≤ GUNA –ò–ó–û–ë–ò–õ–ò–Ø üéá*''',
                         reply_markup=keyboards.start_keyboard(),
                         parse_mode='markdown')


async def questions(call: types.CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.id)
    await bot.send_message(call.message.chat.id,
                           '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç...',
                           reply_markup=keyboards.questions_keyboard())


async def confirmation(call: types.CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    await bot.send_message(call.message.chat.id,
                           '''*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GUNA –ò–ó–û–ë–ò–õ–ò–Ø!* üí´ 
  
  –í—ã –Ω–∞ –ø–æ—Ä–æ–≥–µ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è, –≥–¥–µ –∫–∞–∂–¥—ã–π —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –ø—Ä–æ—è–≤–∏—Ç –¥–ª—è –≤–∞—Å –∏–∑–æ–±–∏–ª—å–Ω—É—é, –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å—á–∞—Å—Ç—å–µ–º –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π, —ç–∫—Å—Ç—Ä–∞–æ—Ä–¥–∏–Ω–∞—Ä–Ω—É—é –∂–∏–∑–Ω—å! 
  
  *–í —Å–ª–µ–¥—É—é—â–∏–µ 7 –¥–Ω–µ–π –µ–∂–µ–¥–Ω–µ–≤–Ω–æ, –≤—ã –±—É–¥–µ—Ç–µ –≥–ª–æ–±–∞–ª—å–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å —Å–≤–æ–µ —Å–æ–∑–Ω–∞–Ω–∏–µ, —Ä–µ—Å—É—Ä—Å—ã –∏ —Ä–µ—Å—É—Ä—Å–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞–¥—É—Ç –Ω–æ–≤—ã–µ —ç–Ω–µ—Ä–≥–æ–Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã, –≤–∫–ª—é—á–∞—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å:*
  
  ‚ñ´Ô∏è*–°–æ–∑–¥–∞—Ç—å –∏–ª–∏ —É–ª—É—á—à–∏—Ç—å –≤—Å–µ –≤–∞—à–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –Ω–∞–ø–æ–ª–Ω–∏—Ç—å –±–µ–∑—É—Å–ª–æ–≤–Ω–æ–π –ª—é–±–æ–≤—å—é, –ø—Ä–æ—è–≤–∏—Ç—å —Å–µ–∫—Å—É–∞–ª—å–Ω—É—é –±–ª–∏–∑–æ—Å—Ç—å –∏ –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –¥–æ–≤–µ—Ä–∏–µ —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º.*
  
  ‚ñ´Ô∏è*–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∂–µ–Ω—Å–∫—É—é –∏ —Å–µ–∫—Å—É–∞–ª—å–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é, –ø—Ä–æ—è–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∏–∑–æ–±–∏–ª—å–Ω–æ–µ, –ø—Ä–∏—Ç—è–≥–∞—Ç–µ–ª—å–Ω–æ–µ, –ø—Ä–∏—Ç—è–≥–∏–≤–∞—é—â–µ–µ –∏ –≤—Å–µ–ø—Ä–æ—è–≤–ª—è—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ñ–µ–Ω—â–∏–Ω—ã* üëë 
  
  ‚ñ´Ô∏è*–ù–∞–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à–µ —Å–æ–∑–Ω–∞–Ω–∏–µ –∏ —Ç–µ–ª–æ –∑–¥–æ—Ä–æ–≤—å–µ–º, —ç–Ω–µ—Ä–≥–∏–µ–π –∏ –ª—ë–≥–∫–æ—Å—Ç—å—é.* 
  
  ‚ñ´Ô∏è*–û–±—Ä–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –ø—É—Ç—å –∫ —Å–≤–æ–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ (–¥—É—Ö–æ–≤–Ω–æ–π –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π), –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∏ –≤–Ω–µ—à–Ω–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥–µ, –≥–¥–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏–Ω–æ—Å–∏—Ç –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω—É—é —Ä–∞–¥–æ—Å—Ç—å –±—ã—Ç–∏—è –∏ –∏—Å—Ç–∏–Ω–Ω–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ.* 
  
  *–ò —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å ¬´–ö—Ç–æ –Ø¬ª, –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ, –∂–µ–ª–∞–µ–º—ã–µ, –º–∞—Å—à—Ç–∞–±–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏!* 
  
  *GUNA –ò–ó–û–ë–ò–õ–ò–Ø ‚Äî —ç—Ç–æ –º–æ—â–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –º–Ω–æ–≥–æ–º–µ—Ä–Ω–æ–≥–æ –∏–∑–æ–±–∏–ª–∏—è!*   
  
  *–ú—ã –Ω–∞—á–∏–Ω–∞–µ–º* ‚ù§Ô∏è
  *–° –ª—é–±–æ–≤—å—é, –ê–Ω–∞—Å—Ç–∞—Å–∏—è –ì—É–Ω–∏–Ω–∞.*''',
                           reply_markup=keyboards.confirmation_keyboard(),
                           parse_mode='markdown')


async def payment_process(call: types.CallbackQuery):
    order_ids = await base.orders()
    user_order = randint(10_000_000, 99_000_000)
    while user_order in order_ids:
        user_order = randint(10_000_000, 99_000_000)
    await bot.delete_message(call.message.chat.id, call.message.id)
    await bot.send_invoice(chat_id=call.message.chat.id,
                           title='–ò–Ω—Ç–µ–Ω—Å–∏–≤ GUNA –ò–ó–û–ë–ò–õ–ò–Ø',
                           description='–ì–æ—Ç–æ–≤–∞ –≤–æ–π—Ç–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤',
                           invoice_payload=f'{user_order}',
                           provider_token=PAYMENT_TOKEN,
                           currency='RUB',
                           prices=[types.LabeledPrice(label='–¶–µ–Ω–∞', amount=100_00)],
                           max_tip_amount=50_00,
                           suggested_tip_amounts=[10_00, 20_00, 30_00, 40_00],
                           need_name=True,
                           need_email=True,
                           need_phone_number=True,
                           send_email_to_provider=True,
                           send_phone_number_to_provider=True,
                           provider_data=json.dumps(provider_data),
                           reply_markup=keyboards.payment_keyboard())


async def choose_meditation(call: types.CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    await bot.send_message(call.message.chat.id,
                           '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–¥–∏—Ç–∞—Ü–∏—é: ',
                           reply_markup=keyboards.meditation_keyboard())


async def meditation(call: types.CallbackQuery):
    meditations = await meditation_stack()
    await meditations[int(call.data.split('_')[0])](call.message)


async def register_buttons_handlers(bot: AsyncTeleBot):
    bot.register_callback_query_handler(confirmation, func=lambda call: call.data == 'confirmation')
    bot.register_callback_query_handler(payment_process, func=lambda call: call.data == 'approve')
    bot.register_callback_query_handler(menu_edit, func=lambda call: call.data == 'menu_edit')
    bot.register_callback_query_handler(questions, func=lambda call: call.data == 'questions')
    bot.register_callback_query_handler(menu_delete, func=lambda call: call.data == 'menu_delete')
    bot.register_callback_query_handler(choose_meditation, func=lambda call: call.data == 'meditation')
    bot.register_callback_query_handler(meditation, func=lambda call: str(call.data).endswith('meditation-media'))
